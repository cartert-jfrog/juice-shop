name: "JuiceShop CI"

on:
  workflow_dispatch: # The repository will be scanned on demand
  push:
    branches:
      - main
      - develop
      - 'release/*'

#env:
#  JFROG_CLI_AVOID_NEW_VERSION_WARNING: 'true'

permissions:
  actions: read           # for detecting the Github Actions environment
  id-token: write         # for creating OIDC tokens for signing
  contents: write         # for creating fixing pull requests and pushing changes
  pull-requests: write    # for creating pull requests to fix vulnerabilities
  security-events: write  # for uploading SARIF results to GitHub Code Scanning

#
# Setup environment with NPM on Ubuntu
#
jobs:
  build:
    runs-on: ubuntu-latest       
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      #
      # Setup the JFrog CLI using OIDC authentication
      #
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_PROJECT: ${{ vars.JF_PROJECT }}
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: '2.78.7'
          oidc-provider-name: js-oidc
          oidc-audience: js-github

      - name: Set CLI Config
        run: jf npm-config --repo-resolve="js-sd-npm-remote"

      - name: Install Deps
        run: jf npm ci

      - name: Publish
        run: jf npm publish

      - name: Audit
        run: jf audit
        
      - name: Publish Build info With JFrog CLI
        run: |
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish
          
      - name: JFrog Frogbot Repository Scan
        uses: jfrog/frogbot@v2
        id: frogbot
        with:
          oidc-provider-name: js-oidc
          oidc-audience: js-github
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JF_PROJECT: ${{ vars.JF_PROJECT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JF_MIN_SEVERITY: "High"
